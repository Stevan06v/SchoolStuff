public class Time implements Comparable<Time> {    private int hours = 23;    private int minutes = 59;    private int seconds = 59;    public Time(int hours, int minutes, int seconds) {        this.hours = hours;        this.minutes = minutes;        this.seconds = seconds;    }    public Time(){}    public static Time parse(String time) {        String[] seperated_times = time.split(":");        Time timestamp;        try {            switch (seperated_times.length) {                case 2 ->                        timestamp = new Time(0, Integer.parseInt(seperated_times[0]) > 59 || Integer.parseInt(seperated_times[0]) < 0 ? 59 : Integer.parseInt(seperated_times[0]), Integer.parseInt(seperated_times[1]) > 59 || Integer.parseInt(seperated_times[1]) < 0 ? 59 : Integer.parseInt(seperated_times[1]));                case 3 ->                        timestamp = new Time(Integer.parseInt(seperated_times[0]) > 23 || Integer.parseInt(seperated_times[0]) < 0 ? 23 : Integer.parseInt(seperated_times[0]), Integer.parseInt(seperated_times[1]) > 59 || Integer.parseInt(seperated_times[1]) < 0 ? 59 : Integer.parseInt(seperated_times[1]), Integer.parseInt(seperated_times[2]) > 59 || Integer.parseInt(seperated_times[2]) < 0 ? 59 : Integer.parseInt(seperated_times[2]));                default -> timestamp = new Time(23, 59, 59);            }            return timestamp;        } catch (Exception err) {            timestamp = new Time(23,59,59);            return timestamp;        }    }    @Override    public String toString() {        return String.format("%02d:%02d:%02d", this.hours, this.minutes, this.seconds);    }    public int getHours() {        return hours;    }    public int getMinutes() {        return minutes;    }    public int getSeconds() {        return seconds;    }    @Override    public int compareTo(Time o) {        return Integer.compare(this.getTotalSeconds(), o.getTotalSeconds());    }    public void setHours(int hours) {        this.hours = hours > 23 || hours < 0 ? 23 : hours;    }    public void setMinutes(int minutes) {        this.minutes = minutes > 59 || minutes < 0 ? 59 : minutes;    }    public void setSeconds(int seconds) {        this.seconds = seconds > 59 || seconds < 0 ? 59 : seconds;    }    int getTotalSeconds() {        return this.hours * 3600 + this.minutes * 60 + this.seconds;    }}
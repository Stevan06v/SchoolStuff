import java.io.File;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.nio.file.Paths;import java.util.*;public class FacilityRepository {    TreeMap<Integer, City> cities  = new TreeMap<>();    TreeSet<Facility> facilities = new TreeSet<>();    private static FacilityRepository instance;    private  FacilityRepository(){}    public int readFromFile(String s, FacilityFactory f){        int counter = 0;        if(s == null) throw new FacilityManagementException("something went wrong", new NullPointerException());        try {            Path path = Paths.get(s);            List<String> lines = Files.readAllLines(path);            for (String iterator : lines) {                facilities.add(f.createFromString(iterator));            }        }catch (IOException e) {            counter++;        }        return counter;    }    public static FacilityRepository getInstance() {        if(instance == null){            instance = new FacilityRepository();        }        return instance;    }    public List<Facility> getFacilitiesByZipCode(int i) {        List<Facility> facilities = new LinkedList<>();        for (Facility iterator :  this.facilities) {            if(iterator.getCity().getZipCode() == i){                facilities.add(iterator);            }        }        return facilities;    }    public City createCityIfNotExists(int i, String graz) {        City city = null;        if(cities.containsKey(i)){            return cities.get(i);        }else{            city = new City(i,graz);            cities.put(city.getZipCode(),city);            return city;        }    }    public City getCityByZipCode(int i) {       if(cities.containsKey(i)){           return cities.get(i);       }else{           throw new FacilityManagementException("something went wrong");       }    }    public boolean addFacility(Facility facility) {        if(!this.facilities.contains(facility)){            facilities.add(facility);            return true;        }        return false;    }}
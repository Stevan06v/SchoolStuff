import java.util.Objects;public abstract class Facility implements Comparable<Facility>{    private City city;    private String name;    private String street;    private int houseNumber;    public Facility(City city, String name, String street, int houseNumber) {        this.city = city;        this.name = name;        this.street = street;        this.houseNumber = houseNumber;    }    public City getCity() {        return city;    }    public String getName() {        return name;    }    public String getStreet() {        return street;    }    public int getHouseNumber() {        return houseNumber;    }    @Override    public boolean equals(Object o) {        if (this == o) return true;        if (o == null || getClass() != o.getClass()) return false;        Facility facility = (Facility) o;        if (houseNumber != facility.houseNumber) return false;        if (!Objects.equals(city, facility.city)) return false;        return Objects.equals(street, facility.street);    }    @Override    public int hashCode() {        int result = city != null ? city.hashCode() : 0;        result = 31 * result + (name != null ? name.hashCode() : 0);        result = 31 * result + (street != null ? street.hashCode() : 0);        result = 31 * result + houseNumber;        return result;    }    @Override    public int compareTo(Facility o) {       if(city.equals(o.city)){           return street.compareTo(o.street);       }else if(city.compareTo(o.city) > 0){           return 1;       }else {           return -1;       }    }}
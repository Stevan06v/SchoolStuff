import java.io.IOException;import java.lang.reflect.Array;import java.nio.file.Files;import java.nio.file.Path;import java.nio.file.Paths;import java.util.*;public class SportsEvent {    private String name;    private TreeMap<String,Athlete> athlets;    public SportsEvent(String name) {        this.name = name;        this.athlets = new TreeMap<>();    }    public int getParticipantCount() {        return athlets.size();    }    public void addAthlete(Athlete athlete) {        if(this.athlets.containsKey(athlete.getRaceNumber())){            throw new SportsEventException(String.format("Athlete #%s already crossed the finish line!", athlete.getRaceNumber()));        }        this.athlets.put(athlete.getRaceNumber(),athlete);    }    public void readFromFile(String s)  {        if(s == null){            throw new SportsEventException("ok");        }        try{            Path path = Paths.get(s);            List<String> athlets = Files.readAllLines(path);            for (String athlet : athlets) {                Athlete a = AthleteFactory.createFromString(athlet);                if(this.athlets.containsKey(a.getRaceNumber())){                    throw new SportsEventException("duplicate");                }                this.athlets.put(a.getRaceNumber(),a);            }        } catch (IOException e) {            throw new SportsEventException("Exception occurred while reading the file!");        }    }    public Athlete getAthleteByRaceNumber(String s) {        return this.athlets.get(s);    }    @Override    public String toString() {        return "SportsEvent{" +                "name='" + name + '\'' +                '}';    }    public String getName() {        return name;    }}